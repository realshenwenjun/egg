<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dskj.community.mapper.PostMapper">
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache">
	</cache>

	<resultMap type="com.dskj.community.entity.PostDetails" id="postDetail">
		<id property="id" column="id" />
		<result property="userId" column="user_id" />
		<result property="userLevelId" column="user_level_id" />
		<result property="userName" column="user_name" />
		<result property="userPhoto" column="user_photo" />
		<result property="sex" column="sex" />
		<result property="circleId" column="circle_id" />
		<result property="context" column="context" />
		<result property="type" column="type" />
		<result property="topicId" column="topic_id" />
		<result property="createTime" column="create_time" />
		<result property="loveCount" column="love_count" />
		<result property="collectCount" column="collect_count" />
		<result property="commentCount" column="comment_count" />
		<result property="loveId" column="love_id" />
		<result property="collectId" column="collect_id" />
		<collection property="voideUrls" ofType="java.util.ArrayList"
			select="getPostVideoUrls" column="{postId = id}">
		</collection>
		<collection property="imgUrls" ofType="java.util.ArrayList"
			select="getPostImgUrls" column="{postId = id}">
		</collection>
	</resultMap>

	<insert id="add" parameterType="com.dskj.community.entity.Post"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO community_post
		(user_id,circle_id,context,`type`,topic_id,create_time) VALUES
		(#{userId},#{circleId},#{context},#{type},#{topicId},#{createTime})
	</insert>
	<select id="clear" resultType="int" flushCache="true">
		SELECT 1
	</select>
	<delete id="delete" parameterType="int">
		DELETE FROM community_post
		WHERE id = #{0}
	</delete>

	<select id="getCirclePostList" resultMap="postDetail" useCache="false">
		SELECT cp.*,u.level_id AS user_level_id,u.name AS user_name,u.photo AS
		user_photo,u.sex AS sex,
		(SELECT
		COUNT(*) FROM community_post_love cpl WHERE cpl.post_id = cp.id) AS
		love_count,
		(SELECT cpl.id FROM community_post_love cpl WHERE
		cpl.post_id = cp.id AND
		cpl.user_id = #{userId} limit 1) AS love_id,
		(SELECT
		COUNT(*) FROM community_post_collect cpc WHERE cpc.post_id = cp.id)
		AS
		collect_count,
		(SELECT cpc.id FROM community_post_collect cpc WHERE
		cpc.post_id = cp.id AND
		cpc.user_id = #{userId} limit 1) AS collect_id,
		(SELECT
		COUNT(*) FROM community_post_comment cpc WHERE cpc.post_id = cp.id)
		AS
		comment_count
		FROM community_post cp JOIN `user` u ON cp.user_id = u.id WHERE 1 = 1
		<if test="circleId != null">
			AND cp.circle_id = #{circleId}
		</if>
		ORDER BY cp.create_time DESC LIMIT #{page.pageNo},#{page.pageSize}
	</select>
	<select id="getPostVideoUrls" parameterType="java.util.HashMap"
		resultType="java.lang.String">
		SELECT cpv.url FROM community_post_voide cpv WHERE
		cpv.post_id = #{postId}
	</select>
	<select id="getPostImgUrls" parameterType="java.util.HashMap"
		resultType="java.lang.String">
		SELECT cpi.url FROM community_post_img cpi WHERE
		cpi.post_id = #{postId}
	</select>
	<select id="getActivityPostList" resultMap="postDetail"
		useCache="false">
		SELECT cp.*,u.level_id AS user_level_id,u.name AS
		user_name,u.photo AS user_photo,u.sex AS sex,
		(SELECT
		COUNT(*) FROM
		community_post_love cpl WHERE cpl.post_id = cp.id) AS
		love_count,
		(SELECT cpl.id FROM community_post_love cpl WHERE
		cpl.post_id = cp.id
		AND
		cpl.user_id = #{userId} limit 1) AS love_id,
		(SELECT
		COUNT(*) FROM
		community_post_collect cpc WHERE cpc.post_id = cp.id)
		AS
		collect_count,
		(SELECT cpc.id FROM community_post_collect cpc WHERE
		cpc.post_id =
		cp.id AND
		cpc.user_id = #{userId} limit 1) AS collect_id,
		(SELECT
		COUNT(*) FROM
		community_post_comment cpc WHERE cpc.post_id = cp.id)
		AS
		comment_count
		FROM community_post cp JOIN `user` u ON cp.user_id = u.id ORDER BY
		comment_count DESC,cp.create_time DESC LIMIT
		#{page.pageNo},#{page.pageSize}
	</select>
	<select id="getPostDetail" resultMap="postDetail" useCache="false">
		SELECT cp.*,u.level_id AS user_level_id,u.name AS user_name,u.photo AS
		user_photo,u.sex AS sex,
		(SELECT COUNT(*) FROM community_post_love cpl
		WHERE cpl.post_id
		= cp.id) AS
		love_count,
		(SELECT cpl.id FROM
		community_post_love cpl
		WHERE cpl.post_id = cp.id AND
		cpl.user_id =
		#{0}) AS love_id,
		(SELECT COUNT(*) FROM community_post_collect cpc
		WHERE cpc.post_id =
		cp.id)
		AS collect_count,
		(SELECT cpc.id FROM
		community_post_collect cpc
		WHERE cpc.post_id = cp.id AND
		cpc.user_id =
		#{0}) AS collect_id,
		(SELECT COUNT(*) FROM community_post_comment cpc
		WHERE cpc.post_id =
		cp.id)
		AS comment_count
		FROM community_post cp JOIN
		`user` u ON cp.user_id = u.id WHERE cp.id = #{1}
	</select>
	<select id="getInstitutionPostList" resultMap="postDetail">
		SELECT
		cp.*,u.level_id AS user_level_id,u.name AS user_name,u.photo AS
		user_photo,u.sex AS sex,
		(SELECT
		COUNT(*) FROM community_post_love cpl WHERE cpl.post_id = cp.id) AS
		love_count,
		(SELECT cpl.id FROM community_post_love cpl WHERE
		cpl.post_id = cp.id AND
		cpl.user_id = #{userId}) AS love_id,
		(SELECT
		COUNT(*) FROM community_post_collect cpc WHERE cpc.post_id = cp.id)
		AS
		collect_count,
		(SELECT cpc.id FROM community_post_collect cpc WHERE
		cpc.post_id = cp.id AND
		cpc.user_id = #{userId}) AS collect_id,
		(SELECT
		COUNT(*) FROM community_post_comment cpc WHERE cpc.post_id = cp.id)
		AS
		comment_count
		FROM institution_user iu JOIN `user` u ON iu.user_id = u.id
		JOIN community_post cp ON u.id = cp.user_id
		WHERE u.type = 1 AND iu.institution_id = #{institutionId}
		ORDER BY cp.create_time DESC LIMIT #{page.pageNo},#{page.pageSize}
	</select>
	<select id="getUserPostList" resultMap="postDetail">
		SELECT
		cp.*,u.level_id AS user_level_id,u.name AS user_name,u.photo AS
		user_photo,u.sex AS sex,
		(SELECT
		COUNT(*) FROM community_post_love cpl WHERE cpl.post_id = cp.id) AS
		love_count,
		(SELECT cpl.id FROM community_post_love cpl WHERE
		cpl.post_id = cp.id AND
		cpl.user_id = #{visitorId}) AS love_id,
		(SELECT
		COUNT(*) FROM community_post_collect cpc WHERE cpc.post_id = cp.id)
		AS
		collect_count,
		(SELECT cpc.id FROM community_post_collect cpc WHERE
		cpc.post_id = cp.id AND
		cpc.user_id = #{visitorId}) AS collect_id,
		(SELECT
		COUNT(*) FROM community_post_comment cpc WHERE cpc.post_id = cp.id)
		AS
		comment_count
		FROM `user` u
		JOIN community_post cp ON u.id = cp.user_id
		WHERE u.id = #{userId}
		ORDER BY cp.create_time DESC LIMIT #{page.pageNo},#{page.pageSize}
	</select>
	<select id="getInstitutionCirclesPostList" resultMap="postDetail">
		SELECT
		cp.*,u.level_id AS user_level_id,u.name AS user_name,u.photo AS
		user_photo,u.sex AS sex,
		(SELECT
		COUNT(*) FROM community_post_love cpl WHERE cpl.post_id = cp.id) AS
		love_count,
		(SELECT cpl.id FROM community_post_love cpl WHERE
		cpl.post_id = cp.id AND
		cpl.user_id = #{userId}) AS love_id,
		(SELECT
		COUNT(*) FROM community_post_collect cpc WHERE cpc.post_id = cp.id)
		AS
		collect_count,
		(SELECT cpc.id FROM community_post_collect cpc WHERE
		cpc.post_id = cp.id AND
		cpc.user_id = #{userId}) AS collect_id,
		(SELECT
		COUNT(*) FROM community_post_comment cpc WHERE cpc.post_id = cp.id)
		AS
		comment_count
		FROM `user` u JOIN institution_user iu ON u.id = iu.user_id
		JOIN community_post cp ON u.id = cp.user_id
		WHERE u.type = 1 AND iu.institution_id = #{institutionId}
		ORDER BY cp.create_time DESC LIMIT #{page.pageNo},#{page.pageSize}
	</select>
	<select id="getInstitutionCirclesPostCount" parameterType="java.lang.String" resultType="int">
		SELECT
		COUNT(*)
		FROM `user` u JOIN institution_user iu ON u.id = iu.user_id
		JOIN community_post cp ON u.id = cp.user_id
		WHERE u.type = 1 AND iu.institution_id = #{institutionId}
	</select>
	<select id="getUserCirclesPostList" resultMap="postDetail">
		SELECT
		cp.*,u.level_id AS user_level_id,u.name AS user_name,u.photo AS
		user_photo,u.sex AS sex,
		(SELECT
		COUNT(*) FROM community_post_love cpl WHERE cpl.post_id = cp.id) AS
		love_count,
		(SELECT cpl.id FROM community_post_love cpl WHERE
		cpl.post_id = cp.id AND
		cpl.user_id = #{visitorId}) AS love_id,
		(SELECT
		COUNT(*) FROM community_post_collect cpc WHERE cpc.post_id = cp.id)
		AS
		collect_count,
		(SELECT cpc.id FROM community_post_collect cpc WHERE
		cpc.post_id = cp.id AND
		cpc.user_id = #{visitorId}) AS collect_id,
		(SELECT
		COUNT(*) FROM community_post_comment cpc WHERE cpc.post_id = cp.id)
		AS
		comment_count
		FROM `user` u
		JOIN community_post cp ON u.id = cp.user_id
		WHERE u.id = #{userId}
		ORDER BY cp.create_time DESC LIMIT #{page.pageNo},#{page.pageSize}
	</select>
	<select id="getUserCirclesPostCount" parameterType="java.lang.String" resultType="int">
		SELECT
		COUNT(*)
		FROM community_post cp
		WHERE cp.user_id = #{userId}
	</select>
</mapper>