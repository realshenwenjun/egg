<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dskj.course.mapper.PlanMapper">
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache">
	</cache>
	<resultMap type="com.dskj.course.entity.Plan" id="plan">
		<id property="id" column="id" />
		<result property="classId" column="course_classes_id" />
		<result property="date" column="date" />
		<result property="startTime" column="start_time" />
		<result property="endTime" column="end_time" />
		<result property="userId" column="user_id" />
		<result property="address" column="address" />
		<result property="createTime" column="create_time" />
	</resultMap>
	<resultMap type="com.dskj.course.entity.PlanByClass" id="planByClass">
		<result property="id" column="plan_id" />
		<result property="date" column="date" />
		<result property="startTime" column="start_time" />
		<result property="endTime" column="end_time" />
		<result property="address" column="address" />
		<result property="lackId" column="lack_id" />
	</resultMap>
	<resultMap type="com.dskj.course.entity.MoreCourseList" id="moreCourseList">
		<result property="cover" column="cover" />
		<result property="institutionName" column="institution_name" />
		<result property="courseId" column="course_id" />
		<result property="courseName" column="course_name" />
		<result property="classId" column="class_id" />
		<result property="className" column="class_name" />
		<result property="userName" column="user_name" />
		<result property="phone" column="phone" />
		<result property="minDate" column="min_date" />
		<result property="maxDate" column="max_date" />
	</resultMap>
	<insert id="addPlans" parameterType="java.util.ArrayList">
		INSERT INTO course_classes_plan
		(course_classes_id,date,start_time,end_time,user_id,address,create_time)
		VALUES
		<foreach collection="list" item="plans" index="index"
			separator=",">(#{plans.classId},#{plans.date},#{plans.startTime},#{plans.endTime},#{plans.userId},#{plans.address},#{plans.createTime})
		</foreach>
	</insert>
	<update id="updatePlan" parameterType="com.dskj.course.entity.Plan">
		UPDATE course_classes_plan
		ccp SET ccp.date = #{date},ccp.start_time = #{startTime},ccp.end_time
		= #{endTime},ccp.user_id = #{userId},ccp.address = #{address} WHERE
		ccp.id = #{id}
	</update>
	<select id="getPlanByClass" parameterType="java.lang.Integer"
		resultMap="planByClass">
		SELECT ccpn.id AS plan_id,ccpn.date AS date,ccpn.start_time
		AS start_time,ccpn.end_time AS
		end_time,ccpn.address AS address,ccpl.id
		AS lack_id FROM
		course_classes cc JOIN course_classes_plan ccpn ON
		cc.id =
		ccpn.course_classes_id LEFT JOIN course_classes_plan_lack ccpl
		ON
		ccpn.id = ccpl.class_plan_id AND cc.user_id = ccpl.user_id WHERE
		cc.id
		= #{0} ORDER BY ccpn.date,ccpn.start_time
	</select>
	<delete id="deletePlanByCourse" parameterType="java.lang.Integer">
		delete from
		course_classes_plan ccp where ccp.course_classes_id in (select cc.id
		from course_classes cc where cc.course_id = #{0})
	</delete>
	<delete id="deletePlanByClass" parameterType="java.lang.Integer">
		delete from
		course_classes_plan where course_classes_id = #{0}
	</delete>
	<delete id="deleteById" parameterType="int">
		DELETE FROM
		course_classes_plan WHERE id = #{0}
	</delete>
	<insert id="addPlan" parameterType="com.dskj.course.entity.Plan"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO course_classes_plan
		(course_classes_id,date,start_time,end_time,user_id,address,create_time)
		VALUES
		(#{classId},#{date},#{startTime},#{endTime},#{address},#{address},#{createTime})
	</insert>
	<select id="getPlanById" parameterType="int" resultMap="plan">
		SELECT *
		FROM course_classes_plan ccp WHERE ccp.id = #{0}
	</select>
	<select id="getMoreCourseList" resultMap="moreCourseList">
		SELECT c.id AS
		course_id,c.name AS course_name,c.cover AS cover,cc.id
		AS
		class_id,cc.name AS class_name,i.name AS institution_name,u.name AS
		user_name,u.phone AS phone,
		(SELECT MIN(ccp.date) FROM
		course_classes_plan ccp WHERE
		ccp.course_classes_id = cc.id) AS
		min_date,
		(SELECT MAX(ccp.date) FROM
		course_classes_plan ccp WHERE
		ccp.course_classes_id = cc.id) AS
		max_date
		FROM institution_user iu JOIN
		institution i ON
		iu.institution_id = i.id
		JOIN course c ON i.id =
		c.institution_id
		JOIN
		course_classes cc ON c.id = cc.course_id
		JOIN user
		u ON cc.user_id =
		u.id
		WHERE
		<if test="institutionId!=null">
			i.id = #{institutionId} AND
		</if>
		iu.user_id = #{userId} AND iu.current = 1 AND
		(SELECT MAX(ccp.date)
		FROM
		course_classes_plan ccp WHERE
		ccp.course_classes_id = cc.id) >=
		DATE(NOW()) ORDER BY
		min_date DESC
		LIMIT
		#{page.pageNo},#{page.pageSize}
	</select>
	<select id="clear" resultType="int" flushCache="true">
		SELECT 1
	</select>
	<select id="getCollectCourseList" resultMap="moreCourseList">
		SELECT c.id AS
		course_id,c.name AS course_name,c.cover AS cover,cc.id AS
		class_id,cc.name AS class_name,i.name AS institution_name,u.name AS
		user_name,u.phone AS phone,
		(SELECT MIN(ccp.date) FROM
		course_classes_plan ccp WHERE
		ccp.course_classes_id = cc.id) AS
		min_date,
		(SELECT MAX(ccp.date) FROM
		course_classes_plan ccp WHERE
		ccp.course_classes_id = cc.id) AS
		max_date
		FROM institution i
		JOIN course c ON i.id = c.institution_id
		JOIN
		course_classes cc ON c.id =
		cc.course_id
		JOIN user u ON cc.user_id =
		u.id
		WHERE
		cc.institution_id =
		#{institutionId} AND (SELECT MAX(ccp.date) FROM
		course_classes_plan ccp WHERE
		ccp.course_classes_id = cc.id) >= DATE(NOW()) ORDER BY
		min_date DESC
		LIMIT
		#{page.pageNo},#{page.pageSize}
	</select>
</mapper>